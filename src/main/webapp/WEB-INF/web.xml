<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<!--1. 启动spring容器 -->
	<!-- 在启动程序时加载spring配置文件 -->
	<context-param>
		<description>启动项目时就加载此spring的配置文件 启动spring容器</description>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!--配置监听器在启动项目时加载spring的配置文件，启动spring容器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 2. 配置springMVC前端控制器 拦截前端所有请求 -->
	<servlet>
		<description>前端控制器，用于过滤前端请求，只有符合指定要求的请求才能进入后台进行响相应操作</description>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

		<!-- <init-param> <param-name>contextConfigLocation</param-name> <param-value>location</param-value> 
			</init-param> -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 配置请求编码字符集 -->
	<filter>
		<description>字符集过滤器</description>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<description>指定的编码格式</description>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<description>强制所有请求都用encoding编码</description>
			<param-name>forceRequestEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<description>强制所有响应都用encoding编码</description>
			<param-name>forceResponseEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 使用rest风格url，将页面发送的普通post请求转为指定的delete或者put请求 -->
	<filter>
		<description></description>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!--对put请求的支持  -->
	<filter>
		<filter-name>httpPutFormContentFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>httpPutFormContentFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
<!-- 	<jsp-config>

		<taglib>

			<taglib-uri>http://java.sun.com/jsp/jstl/core</taglib-uri>

			<taglib-location>/WEB-INF/c.tld</taglib-location>

		</taglib>

		<taglib>

			<taglib-uri>http://java.sun.com/jsp/jstl/xml</taglib-uri>

			<taglib-location>/WEB-INF/x.tld</taglib-location>

		</taglib>

		<taglib>

			<taglib-uri>http://java.sun.com/jsp/jstl/fmt</taglib-uri>

			<taglib-location>/WEB-INF/fmt.tld</taglib-location>

		</taglib>

		<taglib>

			<taglib-uri>http://java.sun.com/jsp/jstl/sql</taglib-uri>

			<taglib-location>/WEB-INF/sql.tld</taglib-location>

		</taglib>

	</jsp-config> -->

</web-app>